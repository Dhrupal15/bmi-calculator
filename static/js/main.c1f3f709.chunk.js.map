{"version":3,"sources":["components/bmi-calculator.js","App.js","reportWebVitals.js","index.js"],"names":["BmiCalculator","useState","height","setHeight","heightError","setHeightError","weightError","setWeightError","weight","setWeight","bmi","setBmi","info","setInfo","open","setOpen","handleClose","className","TextField","fullWidth","onChange","e","target","value","placeholder","error","helperText","variant","onClick","val","Number","toFixed","Dialog","maxWidth","onClose","DialogTitle","sx","fontWeight","DialogContent","DialogContentText","id","color","DialogActions","Button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAyGeA,EA7FO,WACpB,MAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,qBAApC,mBAAMG,EAAN,KAAmBC,EAAnB,KACA,EAAoCJ,qBAApC,mBAAMK,EAAN,KAAmBC,EAAnB,KACA,EAA4BN,qBAA5B,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAsBR,qBAAtB,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAAwBV,qBAAxB,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAwBZ,oBAAS,GAAjC,mBAAOa,EAAP,KAAaC,EAAb,KA4BMC,EAAc,WAClBD,GAAQ,GACRZ,EAAU,IACVM,EAAU,KAEZ,OACE,sBAAKQ,UAAU,aAAf,UACE,oBAAIA,UAAU,QAAd,4BACA,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,uBACA,cAACC,EAAA,EAAD,CACEC,WAAS,EACTF,UAAU,YACVG,SAAU,SAACC,GAAD,OAAOlB,EAAUkB,EAAEC,OAAOC,QACpCC,YAAY,eACZD,MAAOrB,EACPuB,QAAOrB,EACPsB,WAAYtB,OAGhB,sBAAKa,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,uBACA,cAACC,EAAA,EAAD,CACEC,WAAS,EACTF,UAAU,YACVG,SAAU,SAACC,GAAD,OAAOZ,EAAUY,EAAEC,OAAOC,QACpCC,YAAY,eACZD,MAAOf,EACPiB,QAAOnB,EACPoB,WAAYpB,OAGhB,qBAAKW,UAAU,QAAf,SACE,wBAAQU,QAAQ,YAAYC,QA7DlB,WAChB,GAAe,KAAX1B,GAA4B,KAAXM,EAAe,CAClCO,GAAQ,GACR,IAAIc,GACmD,IAArD,CAACC,OAAOtB,GAAUsB,OAAO5B,GAAU4B,OAAO5B,KAC1C6B,QAAQ,GACVpB,EAAOkB,GAELhB,EADEgB,EAAM,KACA,eACCA,EAAM,MAAQA,GAAO,KACtB,UACCA,EAAM,MAAQA,EAAM,GACrB,aAEA,aAII,KAAT3B,GACCG,EAAe,mCAEP,KAATG,GACCD,EAAe,oCAuCjB,4BAKJ,eAACyB,EAAA,EAAD,CAAQlB,KAAMA,EAAMK,WAAS,EAACc,SAAS,KAAKC,QAASlB,EAArD,UACE,cAACmB,EAAA,EAAD,CAAaC,GAAI,CAACC,WAAW,QAA7B,sBACA,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAmBC,GAAG,2BAA2BJ,GAAI,CAACK,MAAM,SAA5D,uBACa/B,KAEb,eAAC6B,EAAA,EAAD,CAAmBC,GAAG,2BAA4BJ,GAAI,CAACK,MAAM,SAA7D,wBACc7B,QAGhB,cAAC8B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQf,QAASZ,EAAjB,yBCtFK4B,MARf,WACE,OACE,qBAAK3B,UAAU,MAAf,SACC,cAAC,EAAD,OCMU4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c1f3f709.chunk.js","sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport \"./bmi-calculator.styles.scss\";\r\n\r\nconst BmiCalculator = () => {\r\n  const [height, setHeight] = useState();\r\n  const[heightError, setHeightError]= useState();\r\n  const[weightError, setWeightError]= useState()\r\n  const [weight, setWeight] = useState();\r\n  const [bmi, setBmi] = useState();\r\n  const [info, setInfo] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const handleBmi = () => {\r\n    if (height !== \"\" && weight !== \"\") {\r\n      setOpen(true);\r\n      let val = (\r\n        [Number(weight) / Number(height) / Number(height)] * 10000\r\n      ).toFixed(1);\r\n      setBmi(val);\r\n      if (val < 18.5) {\r\n        setInfo(\"Under Weight\");\r\n      } else if (val > 18.5 && val <= 24.9) {\r\n        setInfo(\"Healthy\");\r\n      } else if (val > 24.9 && val < 30) {\r\n        setInfo(\"Overweight\");\r\n      } else {\r\n        setInfo(\"Obese\");\r\n      }\r\n    }\r\n    else{\r\n        if(height===\"\"){\r\n            setHeightError(\"Please enter your height in cms\")\r\n        }\r\n        if(weight===\"\"){\r\n            setWeightError(\"Please enter your weight in kgs\")\r\n        }\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setHeight(\"\");\r\n    setWeight(\"\");\r\n  };\r\n  return (\r\n    <div className=\"containers\">\r\n      <h1 className=\"title\">BMI Calculator</h1>\r\n      <div className=\"wrapper\">\r\n        <div className=\"input\">\r\n          <label className=\"label\">Height : </label>\r\n          <TextField\r\n            fullWidth\r\n            className=\"textfield\"\r\n            onChange={(e) => setHeight(e.target.value)}\r\n            placeholder=\"Height in cm\"\r\n            value={height}\r\n            error={heightError?true:false}\r\n            helperText={heightError}\r\n          />\r\n        </div>\r\n        <div className=\"input\">\r\n          <label className=\"label\">Weight : </label>\r\n          <TextField\r\n            fullWidth\r\n            className=\"textfield\"\r\n            onChange={(e) => setWeight(e.target.value)}\r\n            placeholder=\"Weight in kg\"\r\n            value={weight}\r\n            error={weightError?true:false}\r\n            helperText={weightError}\r\n          />\r\n        </div>\r\n        <div className=\"input\">\r\n          <button variant=\"contained\" onClick={handleBmi}>\r\n            Calculate\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Dialog open={open} fullWidth maxWidth=\"sm\" onClose={handleClose}>\r\n        <DialogTitle sx={{fontWeight:\"bold\"}}>Your BMI</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\" sx={{color:\"black\"}}>\r\n            BMI Ratio:{bmi}\r\n          </DialogContentText>\r\n          <DialogContentText id=\"alert-dialog-description\"  sx={{color:\"black\"}}>\r\n            BMi Status:{info}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default BmiCalculator;\r\n","import './App.css';\nimport BmiCalculator from './components/bmi-calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <BmiCalculator/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}